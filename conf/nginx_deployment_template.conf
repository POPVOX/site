# deployment-local configuration

fastcgi_cache_path /tmp/nginx-cache-__USER__ keys_zone=__USER__:100m;

upstream backend-__USER__ {
	server __HOST__:__PORT__;
	# SLAVE SERVERS HERE #
}

# port 80 is used to host the blog (so we can embed insecure content w/o warnings)
# and for Facebook canvas URLs for users browsing Facebook insecurely,
# but other URLs redirect to 443
server {
	listen 80;
	server_name __USER__.popvox.com;
	
	<user!=www> auth_basic "Demo";
	<user!=www> auth_basic_user_file /home/__USER__/sources/conf/htpasswd;

	# The blog is served on http: so that we don't have any trouble
	# embedding outside resources.

	# Static resources for the blog.
	root /home/__USER__/sources/site/httproot;
	location ~ ^/(media)(/|$) {
		root /home/__USER__/sources/site;
		expires 2h;
	}
	location ~ ^/(files|media_kit|favicon.ico|robots.txt)(/|$) {
		expires 2h;
	}

	fastcgi_pass_header set-cookie;
	fastcgi_param PATH_INFO $fastcgi_script_name;
	fastcgi_param REQUEST_METHOD $request_method;
	fastcgi_param QUERY_STRING $query_string;
	fastcgi_param SERVER_NAME $server_name;
	fastcgi_param SERVER_PORT $server_port;
	fastcgi_param SERVER_PROTOCOL $server_protocol;
	fastcgi_param CONTENT_TYPE $content_type;
	fastcgi_param CONTENT_LENGTH $content_length;
	fastcgi_param REQUEST_URI $request_uri;
	fastcgi_param REMOTE_ADDR $remote_addr;
	fastcgi_param REMOTE_PORT $remote_port;

	location /blog {
		fastcgi_pass backend-__USER__;
		<user!=william> fastcgi_cache __USER__;
		fastcgi_cache_use_stale updating;
		fastcgi_cache_valid  200 302 30m;
		fastcgi_cache_valid  404  1m;
		fastcgi_cache_key __USER__$request_method$proxy_host$request_uri|$http_dnt;
	}

	# For Facebook users not browsing over https:, we have
	# to proxy the request because the request is a POST,
	# so we cannot issue a redirect. Will this work with
	# cookies marked SSL-only??
	location /embed/fb_page {
		proxy_pass https://__USER__.popvox.com/embed/fb_page;
	}

	location / {
		rewrite ^/(.*) https://__USER__.popvox.com/$1;
	}
}

# the main site is hosted behind SSL, except for blog URLs which are redirected to port 80 (above)
server {
	listen 443 ssl;

	server_name __USER__.popvox.com;
	access_log /home/__USER__/logs/access.log;
	error_log /home/__USER__/logs/nginx.error.log;

	<user!=www> auth_basic "Demo";
	<user!=www> auth_basic_user_file /home/__USER__/sources/conf/htpasswd;

	add_header X-Served-By $upstream_addr;
	
	root /home/__USER__/sources/site/httproot;
	location ~ ^/(media)(/|$) {
		root /home/__USER__/sources/site;
		expires 2h;
	}
	location ~ ^/(files|media_kit|favicon.ico|robots.txt)(/|$) {
		# catch these locations to prevent fall-through to Django, and
		# serve from the document root.
		expires 2h;
	}
	location /admin_media/ {
		alias /usr/share/pyshared/django/contrib/admin/media/;
	}
	location /benchmarking/ {
		root /home/__USER__/sources/;
	}
	
	# the blog is served on http only
	rewrite ^/blog(/|$)(.*) http://__USER__.popvox.com/blog$1$2;
	
	# fastcgi to Python

	fastcgi_pass_header set-cookie;
	fastcgi_param PATH_INFO $fastcgi_script_name;
	fastcgi_param REQUEST_METHOD $request_method;
	fastcgi_param QUERY_STRING $query_string;
	fastcgi_param SERVER_NAME $server_name;
	fastcgi_param SERVER_PORT $server_port;
	fastcgi_param SERVER_PROTOCOL $server_protocol;
	fastcgi_param CONTENT_TYPE $content_type;
	fastcgi_param CONTENT_LENGTH $content_length;
	fastcgi_param REQUEST_URI $request_uri;
	fastcgi_param REMOTE_ADDR $remote_addr;
	fastcgi_param REMOTE_PORT $remote_port;
	fastcgi_param HTTPS 1;
	
	# the Nginx-FastCGI cache backend will not cache a
	# response if the response has Cache-Control set
	# appropriately. otherwise, cache indiscriminately.
	<user!=william> fastcgi_cache __USER__;
	fastcgi_cache_use_stale updating;
	fastcgi_cache_valid  200 302 30m;
	fastcgi_cache_valid  404  1m;
	fastcgi_cache_key __USER__$request_method$proxy_host$request_uri|$http_dnt;
	
	location / {
		fastcgi_pass backend-__USER__;
	}
}

